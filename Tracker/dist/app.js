"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const cors_1 = __importDefault(require("cors"));
const helmet_1 = __importDefault(require("helmet"));
const middleware_1 = require("@/api/middleware");
const Logger_1 = require("../backend/src/lib/logging/Logger");
const PerformanceMonitor_1 = require("../backend/src/lib/monitoring/PerformanceMonitor");
const clerk_1 = require("@/middleware/clerk");
const prisma_1 = __importDefault(require("@/lib/prisma"));
(0, middleware_1.validateEnvironment)();
const app = (0, express_1.default)();
app.use(middleware_1.requestId);
app.use(Logger_1.loggingMiddleware);
app.use(PerformanceMonitor_1.monitoringMiddleware);
app.use((0, helmet_1.default)());
app.use(middleware_1.securityHeaders);
app.use((0, cors_1.default)(middleware_1.corsOptions));
app.use(middleware_1.sanitizeInputMiddleware);
app.use(middleware_1.sqlInjectionProtection);
app.use(middleware_1.xssProtection);
app.use('/api/auth', middleware_1.rateLimits.auth);
app.use('/api/transactions', middleware_1.rateLimits.transactions);
app.use('/api/reports', middleware_1.rateLimits.reports);
app.use('/api/integrations/webhook', middleware_1.rateLimits.webhooks);
app.use('/api/tax/calculate', middleware_1.rateLimits.taxCalculation);
app.use('/api', middleware_1.rateLimits.api);
app.use(express_1.default.json({ limit: '10mb' }));
app.use(express_1.default.urlencoded({ extended: true }));
const auth_1 = __importDefault(require("@/api/routes/auth"));
const transactions_1 = __importDefault(require("@/api/routes/transactions"));
const business_1 = __importDefault(require("@/api/routes/business"));
const tax_1 = __importDefault(require("@/api/routes/tax"));
const integrations_1 = __importDefault(require("@/api/routes/integrations"));
const reports_1 = __importDefault(require("@/api/routes/reports"));
const insights_1 = __importDefault(require("@/api/routes/insights"));
const insights_simple_1 = __importDefault(require("@/api/routes/insights-simple"));
const admin_1 = __importDefault(require("@/api/routes/admin"));
const client_1 = __importDefault(require("@/api/routes/client"));
const web_1 = __importDefault(require("@/routes/web"));
const pos_onboarding_1 = __importDefault(require("@/api/routes/pos-onboarding"));
const pluginRoutes_1 = require("../backend/src/api/pos/pluginRoutes");
const registryRoutes_1 = require("../backend/src/api/pos/registryRoutes");
const monitoring_1 = __importDefault(require("../backend/src/routes/monitoring"));
app.use('/api/auth', auth_1.default);
app.use('/health', middleware_1.healthCheck);
app.use('/api/admin', admin_1.default);
app.use('/api/client', client_1.default);
app.use('/api/transactions', clerk_1.protectRoute, transactions_1.default);
app.use('/api/business', clerk_1.protectRoute, business_1.default);
app.use('/api/tax', clerk_1.protectRoute, tax_1.default);
app.use('/api/integrations', clerk_1.protectRoute, integrations_1.default);
app.use('/api/reports', clerk_1.protectRoute, reports_1.default);
app.use('/api/insights', clerk_1.protectRoute, insights_1.default);
app.use('/api/insights-simple', clerk_1.protectRoute, insights_simple_1.default);
app.use('/api/pos/onboarding', clerk_1.protectRoute, pos_onboarding_1.default);
app.use('/api/pos/plugins', pluginRoutes_1.pluginRoutes);
app.use('/api/pos/registry', registryRoutes_1.registryRoutes);
app.use('/api/monitoring', monitoring_1.default);
app.use('/', web_1.default);
app.use(middleware_1.notFoundHandler);
app.use(middleware_1.errorHandler);
prisma_1.default.$connect()
    .then(() => console.log('Connected to PostgreSQL via Prisma'))
    .catch((err) => console.error('PostgreSQL connection error:', err));
exports.default = app;
//# sourceMappingURL=app.js.map