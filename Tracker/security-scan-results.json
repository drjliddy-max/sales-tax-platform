{"version":"1.132.1","results":[{"check_id":"html.security.audit.missing-integrity.missing-integrity","path":"/Users/johnliddy/sales-tax-tracker/dashboard-clean.html","start":{"line":5,"col":5,"offset":75},"end":{"line":5,"col":56,"offset":126},"extra":{"message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) youâ€™re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","metadata":{"category":"security","technology":["html"],"cwe":["CWE-353: Missing Support for Integrity Check"],"owasp":["A08:2021 - Software and Data Integrity Failures"],"confidence":"LOW","references":["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity","shortlink":"https://sg.run/krXA"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.xss.direct-response-write.direct-response-write","path":"/Users/johnliddy/sales-tax-tracker/src/api/routes/advanced-export.ts","start":{"line":378,"col":14,"offset":11730},"end":{"line":378,"col":25,"offset":11741},"extra":{"message":"Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML.","metadata":{"interfile":true,"references":["https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"],"owasp":["A07:2017 - Cross-Site Scripting (XSS)","A03:2021 - Injection"],"cwe":["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"],"category":"security","technology":["express"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"MEDIUM","vulnerability_class":["Cross-Site-Scripting (XSS)"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","source":"https://semgrep.dev/r/javascript.express.security.audit.xss.direct-response-write.direct-response-write","shortlink":"https://sg.run/vzGl"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal","path":"/Users/johnliddy/sales-tax-tracker/src/api/routes/advanced-export.ts","start":{"line":400,"col":58,"offset":12440},"end":{"line":400,"col":75,"offset":12457},"extra":{"message":"Possible writing outside of the destination, make sure that the target path is nested in the intended destination","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["express","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal","shortlink":"https://sg.run/weRn"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","path":"/Users/johnliddy/sales-tax-tracker/src/api/routes/advanced-export.ts","start":{"line":400,"col":58,"offset":12440},"end":{"line":400,"col":75,"offset":12457},"extra":{"message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["javascript","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","shortlink":"https://sg.run/OPqk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"/Users/johnliddy/sales-tax-tracker/src/api/routes/integrations.ts","start":{"line":463,"col":19,"offset":13862},"end":{"line":463,"col":59,"offset":13902},"extra":{"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"/Users/johnliddy/sales-tax-tracker/src/services/ComprehensiveReportingService.ts","start":{"line":569,"col":25,"offset":20383},"end":{"line":569,"col":74,"offset":20432},"extra":{"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"/Users/johnliddy/sales-tax-tracker/src/services/ReportingService.ts","start":{"line":277,"col":25,"offset":8097},"end":{"line":277,"col":86,"offset":8158},"extra":{"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"/Users/johnliddy/sales-tax-tracker/src/services/ReportingService.ts","start":{"line":289,"col":17,"offset":8480},"end":{"line":289,"col":89,"offset":8552},"extra":{"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"/Users/johnliddy/sales-tax-tracker/src/services/automation/PassiveSetupService.ts","start":{"line":270,"col":19,"offset":7033},"end":{"line":270,"col":81,"offset":7095},"extra":{"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"/Users/johnliddy/sales-tax-tracker/src/services/automation/ProactiveComplianceService.ts","start":{"line":227,"col":23,"offset":6531},"end":{"line":227,"col":76,"offset":6584},"extra":{"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"/Users/johnliddy/sales-tax-tracker/src/services/automation/ProactiveComplianceService.ts","start":{"line":395,"col":23,"offset":12570},"end":{"line":395,"col":64,"offset":12611},"extra":{"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"/Users/johnliddy/sales-tax-tracker/src/services/insights/SmartInsightsService.ts","start":{"line":59,"col":21,"offset":1736},"end":{"line":59,"col":55,"offset":1770},"extra":{"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"/Users/johnliddy/sales-tax-tracker/src/services/insights/SmartInsightsService.ts","start":{"line":309,"col":21,"offset":10469},"end":{"line":309,"col":75,"offset":10523},"extra":{"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"/Users/johnliddy/sales-tax-tracker/src/services/insights/SmartInsightsService.ts","start":{"line":534,"col":21,"offset":18923},"end":{"line":534,"col":70,"offset":18972},"extra":{"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"/Users/johnliddy/sales-tax-tracker/src/services/insights/SmartInsightsService.ts","start":{"line":688,"col":21,"offset":23926},"end":{"line":688,"col":79,"offset":23984},"extra":{"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","path":"/Users/johnliddy/sales-tax-tracker/src/services/reporting/AdvancedExportService.ts","start":{"line":131,"col":50,"offset":3325},"end":{"line":131,"col":58,"offset":3333},"extra":{"message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["javascript","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","shortlink":"https://sg.run/OPqk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","path":"/Users/johnliddy/sales-tax-tracker/src/services/reporting/AdvancedExportService.ts","start":{"line":198,"col":50,"offset":5441},"end":{"line":198,"col":58,"offset":5449},"extra":{"message":"Detected possible user input going into a `path.join` or `path.resolve` function. This could possibly lead to a path traversal vulnerability,  where the attacker can access arbitrary files stored in the file system. Instead, be sure to sanitize or validate user input first.","metadata":{"owasp":["A05:2017 - Broken Access Control","A01:2021 - Broken Access Control"],"cwe":["CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"],"category":"security","references":["https://owasp.org/www-community/attacks/Path_Traversal"],"technology":["javascript","node.js"],"cwe2022-top25":true,"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"HIGH","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Path Traversal"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.path-traversal.path-join-resolve-traversal.path-join-resolve-traversal","shortlink":"https://sg.run/OPqk"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"/Users/johnliddy/sales-tax-tracker/src/services/reporting/ReportProcessor.ts","start":{"line":139,"col":25,"offset":4262},"end":{"line":139,"col":70,"offset":4307},"extra":{"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization","path":"/Users/johnliddy/sales-tax-tracker/src/services/tax-data-collection/FirecrawlService.ts","start":{"line":123,"col":33,"offset":3778},"end":{"line":123,"col":55,"offset":3800},"extra":{"message":"`match.replace` method will only replace the first occurrence when used with a string argument ('%'). If this method is used for escaping of dangerous data then there is a possibility for a bypass. Try to use sanitization library instead or use a Regex with a global flag.","metadata":{"cwe":["CWE-116: Improper Encoding or Escaping of Output"],"category":"security","technology":["javascript"],"owasp":["A03:2021 - Injection"],"subcategory":["audit"],"likelihood":"LOW","impact":"LOW","confidence":"LOW","references":["https://owasp.org/Top10/A03_2021-Injection"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Encoding"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization","shortlink":"https://sg.run/1GbQ"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp","path":"/Users/johnliddy/sales-tax-tracker/src/services/tax-data-collection/TaxRateAuditLogger.ts","start":{"line":320,"col":44,"offset":9770},"end":{"line":320,"col":73,"offset":9799},"extra":{"message":"RegExp() called with a `jurisdiction` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.","metadata":{"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"cwe":["CWE-1333: Inefficient Regular Expression Complexity"],"references":["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"],"source-rule-url":"https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js","category":"security","technology":["javascript"],"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Denial-of-Service (DoS)"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp","shortlink":"https://sg.run/gr65"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp","path":"/Users/johnliddy/sales-tax-tracker/src/services/tax-data-collection/TaxRateAuditLogger.ts","start":{"line":517,"col":21,"offset":15948},"end":{"line":517,"col":50,"offset":15977},"extra":{"message":"RegExp() called with a `jurisdiction` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.","metadata":{"owasp":["A05:2021 - Security Misconfiguration","A06:2017 - Security Misconfiguration"],"cwe":["CWE-1333: Inefficient Regular Expression Complexity"],"references":["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"],"source-rule-url":"https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js","category":"security","technology":["javascript"],"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","confidence":"LOW","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Denial-of-Service (DoS)"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp","shortlink":"https://sg.run/gr65"},"severity":"WARNING","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.express.security.audit.remote-property-injection.remote-property-injection","path":"/Users/johnliddy/sales-tax-tracker/src/simple-server.ts","start":{"line":567,"col":3,"offset":16756},"end":{"line":572,"col":4,"offset":17020},"extra":{"message":"Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype. Use literal values for object properties.","metadata":{"confidence":"LOW","owasp":["A02:2017 - Broken Authentication","A04:2021 - Insecure Design"],"cwe":["CWE-522: Insufficiently Protected Credentials"],"category":"security","technology":["express"],"references":["https://github.com/nodesecurity/eslint-plugin-security/blob/3c7522ca1be800353513282867a1034c795d9eb4/docs/the-dangers-of-square-bracket-notation.md"],"cwe2021-top25":true,"subcategory":["vuln"],"likelihood":"MEDIUM","impact":"MEDIUM","license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Cryptographic Issues"],"source":"https://semgrep.dev/r/javascript.express.security.audit.remote-property-injection.remote-property-injection","shortlink":"https://sg.run/Z4gn"},"severity":"ERROR","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"/Users/johnliddy/sales-tax-tracker/src/utils/Logger.ts","start":{"line":3,"col":17,"offset":83},"end":{"line":3,"col":64,"offset":130},"extra":{"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"/Users/johnliddy/sales-tax-tracker/src/utils/Logger.ts","start":{"line":7,"col":19,"offset":250},"end":{"line":7,"col":67,"offset":298},"extra":{"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","path":"/Users/johnliddy/sales-tax-tracker/src/utils/Logger.ts","start":{"line":12,"col":19,"offset":431},"end":{"line":12,"col":67,"offset":479},"extra":{"message":"Detected string concatenation with a non-literal variable in a util.format / console.log function. If an attacker injects a format specifier in the string, it will forge the log message. Try to use constant values for the format string.","metadata":{"cwe":["CWE-134: Use of Externally-Controlled Format String"],"owasp":["A01:2021 - Broken Access Control"],"category":"security","technology":["javascript"],"subcategory":["audit"],"likelihood":"MEDIUM","impact":"LOW","confidence":"LOW","references":["https://cwe.mitre.org/data/definitions/134.html"],"license":"Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license","vulnerability_class":["Improper Validation"],"source":"https://semgrep.dev/r/javascript.lang.security.audit.unsafe-formatstring.unsafe-formatstring","shortlink":"https://sg.run/7Y5R"},"severity":"INFO","fingerprint":"requires login","lines":"requires login","validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/Users/johnliddy/sales-tax-tracker/frontend/index.html","start":{"line":7,"col":57,"offset":0},"end":{"line":7,"col":76,"offset":19}}]],"message":"Syntax error at line /Users/johnliddy/sales-tax-tracker/frontend/index.html:7:\n `& Revenue Analytics` was unexpected","path":"/Users/johnliddy/sales-tax-tracker/frontend/index.html","spans":[{"file":"/Users/johnliddy/sales-tax-tracker/frontend/index.html","start":{"line":7,"col":57,"offset":0},"end":{"line":7,"col":76,"offset":19}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/Users/johnliddy/sales-tax-tracker/frontend/src/pages/LandingPage.tsx","start":{"line":23,"col":31,"offset":0},"end":{"line":23,"col":40,"offset":9}},{"path":"/Users/johnliddy/sales-tax-tracker/frontend/src/pages/LandingPage.tsx","start":{"line":204,"col":38,"offset":0},"end":{"line":204,"col":49,"offset":11}}]],"message":"Syntax error at line /Users/johnliddy/sales-tax-tracker/frontend/src/pages/LandingPage.tsx:23:\n `& Revenue` was unexpected","path":"/Users/johnliddy/sales-tax-tracker/frontend/src/pages/LandingPage.tsx","spans":[{"file":"/Users/johnliddy/sales-tax-tracker/frontend/src/pages/LandingPage.tsx","start":{"line":23,"col":31,"offset":0},"end":{"line":23,"col":40,"offset":9}},{"file":"/Users/johnliddy/sales-tax-tracker/frontend/src/pages/LandingPage.tsx","start":{"line":204,"col":38,"offset":0},"end":{"line":204,"col":49,"offset":11}}]}],"paths":{"scanned":["/Users/johnliddy/sales-tax-tracker/.claude/settings.local.json","/Users/johnliddy/sales-tax-tracker/.context7.json","/Users/johnliddy/sales-tax-tracker/.env","/Users/johnliddy/sales-tax-tracker/.env.example","/Users/johnliddy/sales-tax-tracker/.eslintrc.custom.js","/Users/johnliddy/sales-tax-tracker/.eslintrc.js","/Users/johnliddy/sales-tax-tracker/.gitignore","/Users/johnliddy/sales-tax-tracker/.husky/pre-commit","/Users/johnliddy/sales-tax-tracker/.platform-state.json","/Users/johnliddy/sales-tax-tracker/.prettierignore","/Users/johnliddy/sales-tax-tracker/.prettierrc","/Users/johnliddy/sales-tax-tracker/.vscode/extensions.json","/Users/johnliddy/sales-tax-tracker/.vscode/settings.json","/Users/johnliddy/sales-tax-tracker/.warp.md","/Users/johnliddy/sales-tax-tracker/BACKUP_CONFIRMATION.md","/Users/johnliddy/sales-tax-tracker/BACKUP_LOG.md","/Users/johnliddy/sales-tax-tracker/CLAUDE.md","/Users/johnliddy/sales-tax-tracker/DEVELOPMENT.md","/Users/johnliddy/sales-tax-tracker/DEVELOPMENT_RULES.md","/Users/johnliddy/sales-tax-tracker/QUICK-REFERENCE.md","/Users/johnliddy/sales-tax-tracker/README.md","/Users/johnliddy/sales-tax-tracker/dashboard-clean.html","/Users/johnliddy/sales-tax-tracker/dev-start.sh","/Users/johnliddy/sales-tax-tracker/docs/report-templates.md","/Users/johnliddy/sales-tax-tracker/enhance-landing-page.js","/Users/johnliddy/sales-tax-tracker/fix-landing-page.js","/Users/johnliddy/sales-tax-tracker/frontend/.env","/Users/johnliddy/sales-tax-tracker/frontend/.env.example","/Users/johnliddy/sales-tax-tracker/frontend/.eslintrc.cjs","/Users/johnliddy/sales-tax-tracker/frontend/.warp.md","/Users/johnliddy/sales-tax-tracker/frontend/README.md","/Users/johnliddy/sales-tax-tracker/frontend/index.html","/Users/johnliddy/sales-tax-tracker/frontend/package-lock.json","/Users/johnliddy/sales-tax-tracker/frontend/package.json","/Users/johnliddy/sales-tax-tracker/frontend/postcss.config.js","/Users/johnliddy/sales-tax-tracker/frontend/src/App.tsx","/Users/johnliddy/sales-tax-tracker/frontend/src/assets/index.css","/Users/johnliddy/sales-tax-tracker/frontend/src/components/Layout.tsx","/Users/johnliddy/sales-tax-tracker/frontend/src/main.tsx","/Users/johnliddy/sales-tax-tracker/frontend/src/pages/DemoInsights.tsx","/Users/johnliddy/sales-tax-tracker/frontend/src/pages/LandingPage.tsx","/Users/johnliddy/sales-tax-tracker/frontend/src/services/api.ts","/Users/johnliddy/sales-tax-tracker/frontend/src/services/auth.ts","/Users/johnliddy/sales-tax-tracker/frontend/src/types/index.ts","/Users/johnliddy/sales-tax-tracker/frontend/src/vite-env.d.ts","/Users/johnliddy/sales-tax-tracker/frontend/tailwind.config.js","/Users/johnliddy/sales-tax-tracker/frontend/tsconfig.json","/Users/johnliddy/sales-tax-tracker/frontend/tsconfig.node.json","/Users/johnliddy/sales-tax-tracker/frontend/vite.config.ts","/Users/johnliddy/sales-tax-tracker/jest.config.js","/Users/johnliddy/sales-tax-tracker/live-demo-test.spec.js","/Users/johnliddy/sales-tax-tracker/logs/combined.log","/Users/johnliddy/sales-tax-tracker/logs/error.log","/Users/johnliddy/sales-tax-tracker/mcp.config.json","/Users/johnliddy/sales-tax-tracker/migrations/006_create_revenue_tracking_tables.sql","/Users/johnliddy/sales-tax-tracker/migrations/007_create_advanced_analytics_tables.sql","/Users/johnliddy/sales-tax-tracker/migrations/008_create_reporting_system_tables.sql","/Users/johnliddy/sales-tax-tracker/migrations/009_insert_default_report_templates.sql","/Users/johnliddy/sales-tax-tracker/migrations/010_add_user_roles_and_tracking.sql","/Users/johnliddy/sales-tax-tracker/nodemon.json","/Users/johnliddy/sales-tax-tracker/package-lock.json","/Users/johnliddy/sales-tax-tracker/package.json","/Users/johnliddy/sales-tax-tracker/playwright-report/index.html","/Users/johnliddy/sales-tax-tracker/playwright.config.ts","/Users/johnliddy/sales-tax-tracker/prisma/migrations/20250815102204_init/migration.sql","/Users/johnliddy/sales-tax-tracker/prisma/migrations/migration_lock.toml","/Users/johnliddy/sales-tax-tracker/prisma/schema.prisma","/Users/johnliddy/sales-tax-tracker/scripts/update-tax-rates.ts","/Users/johnliddy/sales-tax-tracker/scripts/validate-architecture.js","/Users/johnliddy/sales-tax-tracker/scripts/verify-backup.sh","/Users/johnliddy/sales-tax-tracker/simple-live-test.spec.js","/Users/johnliddy/sales-tax-tracker/simple-test.spec.js","/Users/johnliddy/sales-tax-tracker/src/api/controllers/UserController.ts","/Users/johnliddy/sales-tax-tracker/src/api/middleware/auth.ts","/Users/johnliddy/sales-tax-tracker/src/api/middleware/cache.ts","/Users/johnliddy/sales-tax-tracker/src/api/middleware/errorHandler.ts","/Users/johnliddy/sales-tax-tracker/src/api/middleware/index.ts","/Users/johnliddy/sales-tax-tracker/src/api/middleware/security.ts","/Users/johnliddy/sales-tax-tracker/src/api/middleware/sentry.ts","/Users/johnliddy/sales-tax-tracker/src/api/middleware/validation.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/admin.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/advanced-export.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/audit.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/auth.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/automation.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/business.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/client.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/insights-simple.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/insights.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/integrations.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/monitoring.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/redis-management.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/report-processor.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/reports.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/tax-updates.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/tax.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/transactions.ts","/Users/johnliddy/sales-tax-tracker/src/api/routes/users.ts","/Users/johnliddy/sales-tax-tracker/src/app.ts","/Users/johnliddy/sales-tax-tracker/src/components/LandingPage.jsx","/Users/johnliddy/sales-tax-tracker/src/config/index.ts","/Users/johnliddy/sales-tax-tracker/src/integrations/pos/SquareIntegration.ts","/Users/johnliddy/sales-tax-tracker/src/integrations/pos/index.ts","/Users/johnliddy/sales-tax-tracker/src/lib/prisma.ts","/Users/johnliddy/sales-tax-tracker/src/middleware/auth.ts","/Users/johnliddy/sales-tax-tracker/src/middleware/clerk.ts","/Users/johnliddy/sales-tax-tracker/src/middleware/logging.ts","/Users/johnliddy/sales-tax-tracker/src/middleware/requestLogger.ts","/Users/johnliddy/sales-tax-tracker/src/models/AuditLog.ts","/Users/johnliddy/sales-tax-tracker/src/models/AutomationLog.ts","/Users/johnliddy/sales-tax-tracker/src/models/Business.ts","/Users/johnliddy/sales-tax-tracker/src/models/BusinessAutomation.ts","/Users/johnliddy/sales-tax-tracker/src/models/BusinessInsight.ts","/Users/johnliddy/sales-tax-tracker/src/models/ChurnEvent.ts","/Users/johnliddy/sales-tax-tracker/src/models/Client.ts","/Users/johnliddy/sales-tax-tracker/src/models/ClientActivity.ts","/Users/johnliddy/sales-tax-tracker/src/models/ClientCohort.ts","/Users/johnliddy/sales-tax-tracker/src/models/ClientHealthScore.ts","/Users/johnliddy/sales-tax-tracker/src/models/ClientSubscription.ts","/Users/johnliddy/sales-tax-tracker/src/models/ClientTier.ts","/Users/johnliddy/sales-tax-tracker/src/models/CustomDashboard.ts","/Users/johnliddy/sales-tax-tracker/src/models/InsightDigest.ts","/Users/johnliddy/sales-tax-tracker/src/models/README.md","/Users/johnliddy/sales-tax-tracker/src/models/ReportHistory.ts","/Users/johnliddy/sales-tax-tracker/src/models/ReportPermission.ts","/Users/johnliddy/sales-tax-tracker/src/models/ReportTemplate.ts","/Users/johnliddy/sales-tax-tracker/src/models/RevenueForecast.ts","/Users/johnliddy/sales-tax-tracker/src/models/RevenueStream.ts","/Users/johnliddy/sales-tax-tracker/src/models/RevenueTransaction.ts","/Users/johnliddy/sales-tax-tracker/src/models/ScheduledReport.ts","/Users/johnliddy/sales-tax-tracker/src/models/TaxRate.ts","/Users/johnliddy/sales-tax-tracker/src/models/Transaction.ts","/Users/johnliddy/sales-tax-tracker/src/models/User.ts","/Users/johnliddy/sales-tax-tracker/src/models/UserInvitation.ts","/Users/johnliddy/sales-tax-tracker/src/models/UserSession.ts","/Users/johnliddy/sales-tax-tracker/src/models/index.ts","/Users/johnliddy/sales-tax-tracker/src/routes/frontend.ts","/Users/johnliddy/sales-tax-tracker/src/routes/web.ts","/Users/johnliddy/sales-tax-tracker/src/server.ts","/Users/johnliddy/sales-tax-tracker/src/services/AdvancedAnalyticsService.ts","/Users/johnliddy/sales-tax-tracker/src/services/ComprehensiveReportingService.ts","/Users/johnliddy/sales-tax-tracker/src/services/EnhancedAnalyticsService.ts","/Users/johnliddy/sales-tax-tracker/src/services/ReportingService.ts","/Users/johnliddy/sales-tax-tracker/src/services/RevenueAnalyticsService.ts","/Users/johnliddy/sales-tax-tracker/src/services/RevenueService.ts","/Users/johnliddy/sales-tax-tracker/src/services/auth/AuditLogService.ts","/Users/johnliddy/sales-tax-tracker/src/services/auth/Auth0Service.ts","/Users/johnliddy/sales-tax-tracker/src/services/automation/PassiveSetupService.ts","/Users/johnliddy/sales-tax-tracker/src/services/automation/ProactiveComplianceService.ts","/Users/johnliddy/sales-tax-tracker/src/services/data/DataAccessService.ts","/Users/johnliddy/sales-tax-tracker/src/services/insights/SmartInsightsService.ts","/Users/johnliddy/sales-tax-tracker/src/services/monitoring/ComplianceMonitoringService.ts","/Users/johnliddy/sales-tax-tracker/src/services/monitoring/POSMonitoringService.ts","/Users/johnliddy/sales-tax-tracker/src/services/monitoring/SentryService.ts","/Users/johnliddy/sales-tax-tracker/src/services/redis/JobProcessors.ts","/Users/johnliddy/sales-tax-tracker/src/services/redis/JobQueueService.ts","/Users/johnliddy/sales-tax-tracker/src/services/redis/RedisConnectionService.ts","/Users/johnliddy/sales-tax-tracker/src/services/redis/RedisInitializer.ts","/Users/johnliddy/sales-tax-tracker/src/services/redis/RedisMonitoringService.ts","/Users/johnliddy/sales-tax-tracker/src/services/redis/SessionService.ts","/Users/johnliddy/sales-tax-tracker/src/services/redis/TaxRateCacheService.ts","/Users/johnliddy/sales-tax-tracker/src/services/reporting/AdvancedExportService.ts","/Users/johnliddy/sales-tax-tracker/src/services/reporting/ReportProcessor.ts","/Users/johnliddy/sales-tax-tracker/src/services/reporting/ReportTemplateInitializer.ts","/Users/johnliddy/sales-tax-tracker/src/services/startup/ReportProcessorInitializer.ts","/Users/johnliddy/sales-tax-tracker/src/services/startup/TaxUpdateInitializer.ts","/Users/johnliddy/sales-tax-tracker/src/services/tax-calculation/PrismaTaxCalculator.ts","/Users/johnliddy/sales-tax-tracker/src/services/tax-calculation/TaxCalculator.ts","/Users/johnliddy/sales-tax-tracker/src/services/tax-calculation/index.ts","/Users/johnliddy/sales-tax-tracker/src/services/tax-data-collection/ComplianceMonitor.ts","/Users/johnliddy/sales-tax-tracker/src/services/tax-data-collection/FirecrawlService.ts","/Users/johnliddy/sales-tax-tracker/src/services/tax-data-collection/TaxRateAuditLogger.ts","/Users/johnliddy/sales-tax-tracker/src/services/tax-data-collection/TaxRateScheduler.ts","/Users/johnliddy/sales-tax-tracker/src/services/tax-data-collection/TaxRateValidator.ts","/Users/johnliddy/sales-tax-tracker/src/services/tax-data-collection/index.ts","/Users/johnliddy/sales-tax-tracker/src/simple-app.ts","/Users/johnliddy/sales-tax-tracker/src/simple-server-entry.ts","/Users/johnliddy/sales-tax-tracker/src/simple-server.ts","/Users/johnliddy/sales-tax-tracker/src/types/insights.ts","/Users/johnliddy/sales-tax-tracker/src/utils/Logger.ts","/Users/johnliddy/sales-tax-tracker/src/utils/index.ts","/Users/johnliddy/sales-tax-tracker/start-mcp-servers.sh","/Users/johnliddy/sales-tax-tracker/supabase/.temp/cli-latest","/Users/johnliddy/sales-tax-tracker/supabase/config.toml","/Users/johnliddy/sales-tax-tracker/test-dashboard.html","/Users/johnliddy/sales-tax-tracker/test-results/.last-run.json","/Users/johnliddy/sales-tax-tracker/test-results/results.json","/Users/johnliddy/sales-tax-tracker/tsconfig.json"]},"time":{"rules":[],"rules_parse_time":0.7733240127563477,"profiling_times":{"config_time":3.1930601596832275,"core_time":3.193028211593628,"ignores_time":0.001199960708618164,"total_time":6.3877410888671875},"parsing_time":{"total_time":2.2182559967041016,"per_file_time":{"mean":0.014404259718857802,"std_dev":0.0003910656641848938},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"scanning_time":{"total_time":10.72228455543518,"per_file_time":{"mean":0.02015467021698342,"std_dev":0.006005415570900004},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_files":[]},"matching_time":{"total_time":3.0472803115844727,"per_file_and_rule_time":{"mean":0.002961399719712802,"std_dev":3.712829755046949e-05},"very_slow_stats":{"time_ratio":0.0,"count_ratio":0.0},"very_slow_rules_on_files":[]},"tainting_time":{"total_time":3.2623040676116943,"per_def_and_rule_time":{"mean":0.0007135398223122693,"std_dev":2.664072231020342e-05},"very_slow_stats":{"time_ratio":0.26766546603674096,"count_ratio":0.001968503937007874},"very_slow_rules_on_defs":[{"fpath":"/Users/johnliddy/sales-tax-tracker/src/api/routes/insights.ts","fline":1,"rule_id":"javascript.express.security.injection.raw-html-format.raw-html-format","time":0.05289292335510254},{"fpath":"/Users/johnliddy/sales-tax-tracker/src/api/routes/transactions.ts","fline":1,"rule_id":"javascript.express.security.injection.raw-html-format.raw-html-format","time":0.07812404632568359},{"fpath":"/Users/johnliddy/sales-tax-tracker/src/simple-server.ts","fline":1,"rule_id":"javascript.express.security.require-request.require-request","time":0.08512210845947266},{"fpath":"/Users/johnliddy/sales-tax-tracker/src/simple-server.ts","fline":1,"rule_id":"javascript.express.security.express-wkhtml-injection.express-wkhtmltoimage-injection","time":0.09688878059387207},{"fpath":"/Users/johnliddy/sales-tax-tracker/src/simple-server.ts","fline":1,"rule_id":"javascript.express.security.audit.xss.direct-response-write.direct-response-write","time":0.10481500625610352},{"fpath":"/Users/johnliddy/sales-tax-tracker/src/simple-server.ts","fline":1,"rule_id":"javascript.express.security.x-frame-options-misconfiguration.x-frame-options-misconfiguration","time":0.1083371639251709},{"fpath":"/Users/johnliddy/sales-tax-tracker/src/simple-server.ts","fline":1,"rule_id":"javascript.express.security.cors-misconfiguration.cors-misconfiguration","time":0.11236405372619629},{"fpath":"/Users/johnliddy/sales-tax-tracker/src/simple-server.ts","fline":1,"rule_id":"javascript.express.security.audit.express-path-join-resolve-traversal.express-path-join-resolve-traversal","time":0.1142420768737793},{"fpath":"/Users/johnliddy/sales-tax-tracker/src/simple-server.ts","fline":1,"rule_id":"javascript.express.security.injection.raw-html-format.raw-html-format","time":0.12041997909545898}]},"fixpoint_timeouts":[],"targets":[],"total_bytes":0,"max_memory_bytes":1096585920},"engine_requested":"OSS","skipped_rules":[]}